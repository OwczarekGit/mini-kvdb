diff --git a/Cargo.lock b/Cargo.lock
index 657c56c..2f206af 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -19,47 +19,48 @@ dependencies = [
 
 [[package]]
 name = "anstream"
-version = "0.6.13"
+version = "0.6.15"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d96bd03f33fe50a863e394ee9718a706f988b9079b20c3784fb726e7678b62fb"
+checksum = "64e15c1ab1f89faffbf04a634d5e1962e9074f2741eef6d97f3c4e322426d526"
 dependencies = [
  "anstyle",
  "anstyle-parse",
  "anstyle-query",
  "anstyle-wincon",
  "colorchoice",
+ "is_terminal_polyfill",
  "utf8parse",
 ]
 
 [[package]]
 name = "anstyle"
-version = "1.0.6"
+version = "1.0.8"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc"
+checksum = "1bec1de6f59aedf83baf9ff929c98f2ad654b97c9510f4e70cf6f661d49fd5b1"
 
 [[package]]
 name = "anstyle-parse"
-version = "0.2.3"
+version = "0.2.5"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c"
+checksum = "eb47de1e80c2b463c735db5b217a0ddc39d612e7ac9e2e96a5aed1f57616c1cb"
 dependencies = [
  "utf8parse",
 ]
 
 [[package]]
 name = "anstyle-query"
-version = "1.0.2"
+version = "1.1.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648"
+checksum = "6d36fc52c7f6c869915e99412912f22093507da8d9e942ceaf66fe4b7c14422a"
 dependencies = [
  "windows-sys",
 ]
 
 [[package]]
 name = "anstyle-wincon"
-version = "3.0.2"
+version = "3.0.4"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7"
+checksum = "5bf74e1b6e971609db8ca7a9ce79fd5768ab6ae46441c572e46cf596f59e57f8"
 dependencies = [
  "anstyle",
  "windows-sys",
@@ -67,21 +68,21 @@ dependencies = [
 
 [[package]]
 name = "autocfg"
-version = "1.2.0"
+version = "1.3.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f1fdabc7756949593fe60f30ec81974b613357de856987752631dea1e3394c80"
+checksum = "0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0"
 
 [[package]]
 name = "bumpalo"
-version = "3.15.4"
+version = "3.16.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7ff69b9dd49fd426c69a0db9fc04dd934cdb6645ff000864d98f7e2af8830eaa"
+checksum = "79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c"
 
 [[package]]
 name = "cc"
-version = "1.0.90"
+version = "1.1.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8cd6604a82acf3039f1144f54b8eb34e91ffba622051189e71b781822d5ee1f5"
+checksum = "2aba8f4e9906c7ce3c73463f62a7f0c65183ada1a2d47e397cc8810827f9694f"
 
 [[package]]
 name = "cfg-if"
@@ -91,9 +92,9 @@ checksum = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
 
 [[package]]
 name = "chrono"
-version = "0.4.37"
+version = "0.4.38"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8a0d04d43504c61aa6c7531f1871dd0d418d91130162063b789da00fd7057a5e"
+checksum = "a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401"
 dependencies = [
  "android-tzdata",
  "iana-time-zone",
@@ -106,9 +107,9 @@ dependencies = [
 
 [[package]]
 name = "clap"
-version = "4.5.4"
+version = "4.5.11"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "90bc066a67923782aa8515dbaea16946c5bcc5addbd668bb80af688e53e548a0"
+checksum = "35723e6a11662c2afb578bcf0b88bf6ea8e21282a953428f240574fcc3a2b5b3"
 dependencies = [
  "clap_builder",
  "clap_derive",
@@ -116,9 +117,9 @@ dependencies = [
 
 [[package]]
 name = "clap_builder"
-version = "4.5.2"
+version = "4.5.11"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ae129e2e766ae0ec03484e609954119f123cc1fe650337e155d03b022f24f7b4"
+checksum = "49eb96cbfa7cfa35017b7cd548c75b14c3118c98b423041d70562665e07fb0fa"
 dependencies = [
  "anstream",
  "anstyle",
@@ -128,9 +129,9 @@ dependencies = [
 
 [[package]]
 name = "clap_derive"
-version = "4.5.4"
+version = "4.5.11"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "528131438037fd55894f62d6e9f068b8f45ac57ffa77517819645d10aed04f64"
+checksum = "5d029b67f89d30bbb547c89fd5161293c0aec155fc691d7924b64550662db93e"
 dependencies = [
  "heck",
  "proc-macro2",
@@ -140,15 +141,15 @@ dependencies = [
 
 [[package]]
 name = "clap_lex"
-version = "0.7.0"
+version = "0.7.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce"
+checksum = "1462739cb27611015575c0c11df5df7601141071f07518d56fcc1be504cbec97"
 
 [[package]]
 name = "colorchoice"
-version = "1.0.0"
+version = "1.0.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7"
+checksum = "d3fd119d74b830634cea2a0f58bbd0d54540518a14397557951e79340abc28c0"
 
 [[package]]
 name = "core-foundation-sys"
@@ -185,6 +186,12 @@ dependencies = [
  "cc",
 ]
 
+[[package]]
+name = "is_terminal_polyfill"
+version = "1.70.1"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "7943c866cc5cd64cbc25b2e01621d07fa8eb2a1a23160ee81ce38704e97b8ecf"
+
 [[package]]
 name = "itoa"
 version = "1.0.11"
@@ -202,19 +209,19 @@ dependencies = [
 
 [[package]]
 name = "libc"
-version = "0.2.153"
+version = "0.2.155"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd"
+checksum = "97b3888a4aecf77e811145cadf6eef5901f4782c53886191b2f693f24761847c"
 
 [[package]]
 name = "log"
-version = "0.4.21"
+version = "0.4.22"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "90ed8c1e510134f979dbc4f070f87d4313098b704861a105fe34231c70a3901c"
+checksum = "a7a70ba024b9dc04c27ea2f0c0548feb474ec5c54bba33a7f72f873a39d07b24"
 
 [[package]]
 name = "minikvdb"
-version = "0.1.0"
+version = "0.2.0"
 dependencies = [
  "chrono",
  "serde",
@@ -230,9 +237,9 @@ dependencies = [
 
 [[package]]
 name = "num-traits"
-version = "0.2.18"
+version = "0.2.19"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a"
+checksum = "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841"
 dependencies = [
  "autocfg",
 ]
@@ -245,42 +252,42 @@ checksum = "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92"
 
 [[package]]
 name = "proc-macro2"
-version = "1.0.79"
+version = "1.0.86"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e835ff2298f5721608eb1a980ecaee1aef2c132bf95ecc026a11b7bf3c01c02e"
+checksum = "5e719e8df665df0d1c8fbfd238015744736151d4445ec0836b8e628aae103b77"
 dependencies = [
  "unicode-ident",
 ]
 
 [[package]]
 name = "quote"
-version = "1.0.35"
+version = "1.0.36"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef"
+checksum = "0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7"
 dependencies = [
  "proc-macro2",
 ]
 
 [[package]]
 name = "ryu"
-version = "1.0.17"
+version = "1.0.18"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "e86697c916019a8588c99b5fac3cead74ec0b4b819707a682fd4d23fa0ce1ba1"
+checksum = "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f"
 
 [[package]]
 name = "serde"
-version = "1.0.197"
+version = "1.0.204"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3fb1c873e1b9b056a4dc4c0c198b24c3ffa059243875552b2bd0933b1aee4ce2"
+checksum = "bc76f558e0cbb2a839d37354c575f1dc3fdc6546b5be373ba43d95f231bf7c12"
 dependencies = [
  "serde_derive",
 ]
 
 [[package]]
 name = "serde_derive"
-version = "1.0.197"
+version = "1.0.204"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7eb0b34b42edc17f6b7cac84a52a1c5f0e1bb2227e997ca9011ea3dd34e8610b"
+checksum = "e0cd7e117be63d3c3678776753929474f3b04a43a080c744d6b0ae2a8c28e222"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -289,9 +296,9 @@ dependencies = [
 
 [[package]]
 name = "serde_json"
-version = "1.0.115"
+version = "1.0.120"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "12dc5c46daa8e9fdf4f5e71b6cf9a53f2487da0e86e55808e2d35539666497dd"
+checksum = "4e0d21c9a8cae1235ad58a00c11cb40d4b1e5c784f1ef2c537876ed6ffd8b7c5"
 dependencies = [
  "itoa",
  "ryu",
@@ -306,9 +313,9 @@ checksum = "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f"
 
 [[package]]
 name = "syn"
-version = "2.0.58"
+version = "2.0.72"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "44cfb93f38070beee36b3fef7d4f5a16f27751d94b187b666a5cc5e9b0d30687"
+checksum = "dc4b9b9bf2add8093d3f2c0204471e951b2285580335de42f9d2534f3ae7a8af"
 dependencies = [
  "proc-macro2",
  "quote",
@@ -334,9 +341,9 @@ checksum = "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b"
 
 [[package]]
 name = "utf8parse"
-version = "0.2.1"
+version = "0.2.2"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a"
+checksum = "06abde3611657adf66d383f00b093d7faecc7fa57071cce2578660c9f1010821"
 
 [[package]]
 name = "wasm-bindgen"
@@ -412,13 +419,14 @@ dependencies = [
 
 [[package]]
 name = "windows-targets"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7dd37b7e5ab9018759f893a1952c9420d060016fc19a472b4bb20d1bdd694d1b"
+checksum = "9b724f72796e036ab90c1021d4780d4d3d648aca59e491e6b98e725b84e99973"
 dependencies = [
  "windows_aarch64_gnullvm",
  "windows_aarch64_msvc",
  "windows_i686_gnu",
+ "windows_i686_gnullvm",
  "windows_i686_msvc",
  "windows_x86_64_gnu",
  "windows_x86_64_gnullvm",
@@ -427,42 +435,48 @@ dependencies = [
 
 [[package]]
 name = "windows_aarch64_gnullvm"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "bcf46cf4c365c6f2d1cc93ce535f2c8b244591df96ceee75d8e83deb70a9cac9"
+checksum = "32a4622180e7a0ec044bb555404c800bc9fd9ec262ec147edd5989ccd0c02cd3"
 
 [[package]]
 name = "windows_aarch64_msvc"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "da9f259dd3bcf6990b55bffd094c4f7235817ba4ceebde8e6d11cd0c5633b675"
+checksum = "09ec2a7bb152e2252b53fa7803150007879548bc709c039df7627cabbd05d469"
 
 [[package]]
 name = "windows_i686_gnu"
-version = "0.52.4"
+version = "0.52.6"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "8e9b5ad5ab802e97eb8e295ac6720e509ee4c243f69d781394014ebfe8bbfa0b"
+
+[[package]]
+name = "windows_i686_gnullvm"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b474d8268f99e0995f25b9f095bc7434632601028cf86590aea5c8a5cb7801d3"
+checksum = "0eee52d38c090b3caa76c563b86c3a4bd71ef1a819287c19d586d7334ae8ed66"
 
 [[package]]
 name = "windows_i686_msvc"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "1515e9a29e5bed743cb4415a9ecf5dfca648ce85ee42e15873c3cd8610ff8e02"
+checksum = "240948bc05c5e7c6dabba28bf89d89ffce3e303022809e73deaefe4f6ec56c66"
 
 [[package]]
 name = "windows_x86_64_gnu"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5eee091590e89cc02ad514ffe3ead9eb6b660aedca2183455434b93546371a03"
+checksum = "147a5c80aabfbf0c7d901cb5895d1de30ef2907eb21fbbab29ca94c5b08b1a78"
 
 [[package]]
 name = "windows_x86_64_gnullvm"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "77ca79f2451b49fa9e2af39f0747fe999fcda4f5e241b2898624dca97a1f2177"
+checksum = "24d5b23dc417412679681396f2b49f3de8c1473deb516bd34410872eff51ed0d"
 
 [[package]]
 name = "windows_x86_64_msvc"
-version = "0.52.4"
+version = "0.52.6"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "32b752e52a2da0ddfbdbcc6fceadfeede4c939ed16d13e648833a61dfb611ed8"
+checksum = "589f6da84c646204747d1270a2a5661ea66ed1cced2631d546fdfb155959f9ec"
diff --git a/minikvdb/Cargo.toml b/minikvdb/Cargo.toml
index da820a3..72f0c5e 100644
--- a/minikvdb/Cargo.toml
+++ b/minikvdb/Cargo.toml
@@ -1,17 +1,18 @@
 [package]
 name = "minikvdb"
-version = "0.1.0"
+version = "0.2.0"
 edition = "2021"
 
 # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
 
 [dependencies]
-chrono = { version = "0.4.37", features = ["serde"], optional = true }
-serde = { version = "1.0.197", features = ["rc", "derive"] }
+chrono = { version = "0.4.38", features = ["serde"], optional = true }
+serde = { version = "1.0.204", features = ["rc", "derive"] }
 
 [features]
 default = ["key_value", "list", "map"]
 key_value = []
 list = []
 map = []
-chrono = ["dep:chrono"]
\ No newline at end of file
+chrono = ["dep:chrono"]
+big-types = []
diff --git a/minikvdb/src/minikvdb/kvdb_value.rs b/minikvdb/src/minikvdb/kvdb_value.rs
index 229936c..85612cb 100644
--- a/minikvdb/src/minikvdb/kvdb_value.rs
+++ b/minikvdb/src/minikvdb/kvdb_value.rs
@@ -1,10 +1,41 @@
-use std::fmt::Display;
-
-use crate::error::MiniKVDBError;
 use serde::{Deserialize, Serialize};
+use std::fmt::Display;
 
 use super::kvdb_key::Key;
 
+#[macro_export]
+macro_rules! kvdb_map {
+    ($v:ty, $typ:ident) => {
+        impl From<$v> for $crate::prelude::KVDBValue {
+            fn from(value: $v) -> Self {
+                Self::$typ(value.to_owned())
+            }
+        }
+
+        impl TryFrom<$crate::prelude::KVDBValue> for $v {
+            type Error = $crate::error::MiniKVDBError;
+            fn try_from(value: $crate::prelude::KVDBValue) -> Result<Self, Self::Error> {
+                if let $crate::prelude::KVDBValue::$typ(ref v) = value {
+                    Ok(v.to_owned())
+                } else {
+                    Err($crate::error::MiniKVDBError::WrongFieldType)
+                }
+            }
+        }
+
+        impl TryFrom<&$crate::prelude::KVDBValue> for $v {
+            type Error = $crate::error::MiniKVDBError;
+            fn try_from(value: &$crate::prelude::KVDBValue) -> Result<Self, Self::Error> {
+                if let $crate::prelude::KVDBValue::$typ(ref v) = value {
+                    Ok(v.to_owned())
+                } else {
+                    Err($crate::error::MiniKVDBError::WrongFieldType)
+                }
+            }
+        }
+    };
+}
+
 pub type KVDBObject = std::collections::HashMap<Key, KVDBValue>;
 
 #[derive(Debug, Clone, PartialEq, PartialOrd, Serialize, Deserialize)]
@@ -15,6 +46,10 @@ pub enum KVDBValue {
     String(String),
     #[cfg(feature = "chrono")]
     DateTimeUtc(::chrono::DateTime<::chrono::Utc>),
+    #[cfg(feature = "big-types")]
+    Long(i64),
+    #[cfg(feature = "big-types")]
+    Double(f64),
 }
 
 impl Display for KVDBValue {
@@ -26,33 +61,18 @@ impl Display for KVDBValue {
             KVDBValue::String(v) => write!(f, "{v}"),
             #[cfg(feature = "chrono")]
             KVDBValue::DateTimeUtc(v) => write!(f, "{v}"),
+            #[cfg(feature = "big-types")]
+            KVDBValue::Long(v) => write!(f, "{v}"),
+            #[cfg(feature = "big-types")]
+            KVDBValue::Double(v) => write!(f, "{v}"),
         }
     }
 }
 
-impl From<i32> for KVDBValue {
-    fn from(value: i32) -> Self {
-        Self::Int(value)
-    }
-}
-
-impl From<f32> for KVDBValue {
-    fn from(value: f32) -> Self {
-        Self::Float(value)
-    }
-}
-
-impl From<bool> for KVDBValue {
-    fn from(value: bool) -> Self {
-        Self::Bool(value)
-    }
-}
-
-impl From<String> for KVDBValue {
-    fn from(value: String) -> Self {
-        Self::String(value)
-    }
-}
+kvdb_map!(i32, Int);
+kvdb_map!(f32, Float);
+kvdb_map!(bool, Bool);
+kvdb_map!(String, String);
 
 impl From<&str> for KVDBValue {
     fn from(value: &str) -> Self {
@@ -60,138 +80,20 @@ impl From<&str> for KVDBValue {
     }
 }
 
-impl TryFrom<KVDBValue> for i32 {
-    type Error = MiniKVDBError;
-    fn try_from(value: KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::Int(v) = value {
-            Ok(v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<KVDBValue> for f32 {
-    type Error = MiniKVDBError;
-    fn try_from(value: KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::Float(v) = value {
-            Ok(v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<KVDBValue> for bool {
-    type Error = MiniKVDBError;
-    fn try_from(value: KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::Bool(v) = value {
-            Ok(v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<KVDBValue> for String {
-    type Error = MiniKVDBError;
-    fn try_from(value: KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::String(v) = value {
-            Ok(v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<&KVDBValue> for i32 {
-    type Error = MiniKVDBError;
-    fn try_from(value: &KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::Int(v) = value {
-            Ok(*v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<&KVDBValue> for f32 {
-    type Error = MiniKVDBError;
-    fn try_from(value: &KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::Float(v) = value {
-            Ok(*v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<&KVDBValue> for bool {
-    type Error = MiniKVDBError;
-    fn try_from(value: &KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::Bool(v) = value {
-            Ok(*v)
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
-impl TryFrom<&KVDBValue> for String {
-    type Error = MiniKVDBError;
-    fn try_from(value: &KVDBValue) -> Result<Self, Self::Error> {
-        if let KVDBValue::String(v) = value {
-            Ok(v.clone())
-        } else {
-            Err(MiniKVDBError::WrongFieldType)
-        }
-    }
-}
-
 #[cfg(feature = "chrono")]
-mod chrono {
-    use chrono::{DateTime, Utc};
+kvdb_map!(chrono::DateTime<chrono::Utc>, DateTimeUtc);
 
-    use super::KVDBValue;
-    use crate::error::MiniKVDBError;
-
-    impl From<chrono::DateTime<chrono::Utc>> for KVDBValue {
-        fn from(value: chrono::DateTime<chrono::Utc>) -> Self {
-            Self::DateTimeUtc(value)
-        }
-    }
-    impl TryFrom<KVDBValue> for DateTime<Utc> {
-        type Error = MiniKVDBError;
-        fn try_from(value: KVDBValue) -> Result<Self, Self::Error> {
-            if let KVDBValue::DateTimeUtc(v) = value {
-                Ok(v)
-            } else {
-                Err(MiniKVDBError::WrongFieldType)
-            }
-        }
-    }
-
-    impl TryFrom<&KVDBValue> for DateTime<Utc> {
-        type Error = MiniKVDBError;
-        fn try_from(value: &KVDBValue) -> Result<Self, Self::Error> {
-            if let KVDBValue::DateTimeUtc(v) = value {
-                Ok(v.to_owned())
-            } else {
-                Err(MiniKVDBError::WrongFieldType)
-            }
-        }
-    }
+#[cfg(feature = "big-types")]
+mod big_types {
+    kvdb_map!(i64, Long);
+    kvdb_map!(f64, Double);
 }
 
 #[macro_export]
 macro_rules! values {
     ( $( $v:expr ),* ) => {
         {
-            let mut vec = vec![];
-            $(
-                vec.push($v.into());
-            )*
-            vec
+            vec![$($v.into(),)*]
         }
     };
 }
diff --git a/test-app/Cargo.toml b/test-app/Cargo.toml
index c9d2814..49fcef0 100644
--- a/test-app/Cargo.toml
+++ b/test-app/Cargo.toml
@@ -6,8 +6,8 @@ edition = "2021"
 # See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
 
 [dependencies]
-minikvdb = { path = "../minikvdb", features = ["chrono"]}
+minikvdb = { path = "../minikvdb", features = ["chrono", "big-types"]}
 minikvdb-macros = { path = "../minikvdb-macros" }
-clap = { version = "4.5.3", features = ["derive"] }
-serde_json = "1.0.115"
-chrono = { version = "0.4.37", features = ["serde"] }
+clap = { version = "4.5.11", features = ["derive"] }
+serde_json = "1.0.120"
+chrono = { version = "0.4.38", features = ["serde"] }
diff --git a/test-app/src/main.rs b/test-app/src/main.rs
index 558356f..601156b 100644
--- a/test-app/src/main.rs
+++ b/test-app/src/main.rs
@@ -15,6 +15,7 @@ fn main() {
             "John",
             3.141529,
             69,
+            420.0_f32,
             420.0,
             false,
             true,
@@ -50,6 +51,7 @@ fn main() {
             money: 123.4,
             premium: false,
             joined: Utc::now(),
+            score: 4.4,
         },
     );
 
@@ -77,6 +79,7 @@ pub struct Person {
     money: f32,
     premium: bool,
     joined: DateTime<Utc>,
+    score: f64,
 }
 
 #[derive(Debug, Default, Clone, KVDBEntity)]
